name: Create-Packages-Github

on:
  workflow_dispatch:
    inputs:
      repoUrls:
        description: 'List of GitHub Repository URLs or Direct Asset Download URLs separated by commas, spaces, or new lines'
        required: true

jobs:
  pre_process:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Generate Matrix
      id: set-matrix
      run: |
        matrix=$(echo -n '['; echo ${{ github.event.inputs.repoUrls }} | tr ', ' '\n' | tr ',' '\n' | tr ' ' '\n' | sed '/^$/d' | sort -u | awk -vORS=',' '{ print "\""$0"\""}' | sed 's/,$//'; echo -n ']')
        echo "matrix=$matrix" >> $GITHUB_OUTPUT
      shell: bash

  build:
    runs-on: windows-latest
    needs: pre_process
    strategy:
      fail-fast: false
      matrix:
        repoUrl: ${{fromJson(needs.pre_process.outputs.matrix)}}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Initialize Result Files
      run: |
        echo "" > success.txt
        echo "" > failure.txt
      shell: pwsh

    - name: Set Global Variables
      run: |
        echo "REPO_URL=${{ matrix.repoUrl }}" >> $GITHUB_ENV
        echo "ROOT_DIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV
        echo "SCRIPTS_DIR=$GITHUB_WORKSPACE\scripts" >> $GITHUB_ENV
      shell: bash

    - name: Install Chocolatey
      run: |
        if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
          Set-ExecutionPolicy Bypass -Scope Process -Force
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        }
      shell: pwsh

    - name: Create Package
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        . "${{ env.SCRIPTS_DIR}}\create-package-github.ps1"
        Initialize-GithubPackage -InputUrl "${{ env.REPO_URL}}"
      shell: pwsh

    - name: Upload success and failure lists
      uses: actions/upload-artifact@v3
      with:
        name: result-files
        path: |
          success.txt
          failure.txt

  post_process:
    needs: build
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Download success and failure lists
      uses: actions/download-artifact@v3
      with:
        name: result-files

    - name: Commit and Push to GitHub
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add icons/ packages/
        git commit -m "Automated Package Creation: ${{ env.REPO_URL }}" || echo "No changes to commit"
        git push origin ${{ github.ref }}
      shell: bash
