name: Update-Packages-Github

on:
  schedule:
  - cron: '0 0,12 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Set Global Variables
      run: |
        echo "SCRIPTS_DIR=$GITHUB_WORKSPACE\scripts" >> $GITHUB_ENV
        echo "PACKAGES_DIR=$GITHUB_WORKSPACE\packages" >> $GITHUB_ENV
      shell: bash

    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Install Dependencies (Chocolatey)
      run: |
        if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
          Write-Host "Chocolatey is not installed. Installing now..."
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
          if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
            Write-Error "Failed to install Chocolatey. Aborting."
            exit 1
          }
        }
      shell: pwsh

    - name: Update Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        . "${{ env.SCRIPTS_DIR }}\auto-package-updates.ps1"
        $updatedPackages = ""
        try {
          $updatedPackages = (Get-Updates -PackagesDir "${{ env.PACKAGES_DIR }}")
        } catch {
          Write-Host "An error occurred while getting updates: $_"
        }
        # Set the value of the UPDATED_PACKAGES environment variable
        echo "UPDATED_PACKAGES=$updatedPackages" >> $GITHUB_ENV
        
        Write-Host "Updated packages (PowerShell): $updatedPackages"
      shell: pwsh
      continue-on-error: true
    
    # Debug step to print the value of UPDATED_PACKAGES
    - name: Debug UPDATED_PACKAGES (GitHub Actions Variable)
      run: |
        echo "UPDATED_PACKAGES (GitHub Actions env var) = ${{ env.UPDATED_PACKAGES }}"
      shell: bash
    
    # Check the contents of the GITHUB_ENV file
    - name: Check GITHUB_ENV File Contents
      run: |
        cat $GITHUB_ENV
      shell: bash
    
    - name: Commit and Push to GitHub
      run: |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add icons/ 
        git add packages/*.nupkg
        git commit -m "Automatically Updated: ${{ env.UPDATED_PACKAGES}}" || echo "No changes to commit"
        git push origin ${{ github.ref }}
      shell: pwsh
    