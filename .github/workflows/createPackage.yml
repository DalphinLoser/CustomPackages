name: CreatePackage

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for Chocolatey
      run: |
        if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
          Write-Host "Chocolatey is not installed. Installing now..."
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
          if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
            Write-Error "Failed to install Chocolatey. Aborting."
            exit 1
          }
        }
      shell: pwsh

    - name: Validate That The PowerShell Script and Packages Directory Exist. Save them as Environment Variables
      run: |
        Write-Host "Validating that the PowerShell script and packages directory exist..."
        $scriptPath = "./scripts/fetch-latest-release.ps1"
        if (!(Test-Path -Path $scriptPath)) {
          Write-Error "Required PowerShell script does not exist."
          exit 1
        }
        else { $scriptPath = Resolve-Path $scriptPath }
        Write-Host "PowerShell script found at $scriptPath"
    
        $packagesDirRelative = "./packages"
        Write-Host "Validating that the packages directory exists..."
        if (!(Test-Path -Path $packagesDirRelative)) {
          Write-Host "Packages directory does not exist. Creating it now..."
          New-Item -ItemType Directory -Path $packagesDirRelative
          $packagesDir = Resolve-Path $packagesDirRelative
          $packagesDirExistsInRepo = $false
        }
        else {
          $packagesDir = Resolve-Path $packagesDirRelative
          Write-Host "Packages directory found at $packagesDir"
          $packagesDirExistsInRepo = $true
        }
    
        echo "scriptPath=$scriptPath" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "packagesDir=$packagesDir" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "packagesDirExistsInRepo=$packagesDirExistsInRepo" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh

    - name: Create Temp Directory For Building and add it to the Environment Variables
      run: |
        $tempDir = New-Item -ItemType Directory -Path "./temp"
        echo "tempDir=$tempDir" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh

    - name: Navigate to the Temp Directory Then Execute The PowerShell Script
      run: |
        cd $env:tempDir
        & $env:scriptPath
      shell: pwsh

    - name: Copy Everything Fron The Temp Directory to The Packages Directory
      run: |
        Copy-Item -Path "$env:tempDir/*" -Destination "$env:packagesDir" -Recurse -Force
      shell: pwsh

    - name: Stage the packages directory and its contents for commit
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Stage the packages directory and all its contents
        git add $env:packagesDir
        
        # Commit the changes
        git commit -m "Update packages" || echo "No changes to commit."
      shell: pwsh
