name: CreatePackage

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check for Chocolatey
      run: |
        if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
          Write-Host "Chocolatey is not installed. Installing now..."
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
          if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
            Write-Error "Failed to install Chocolatey. Aborting."
            exit 1
          }
        }
      shell: pwsh

    - name: Validate Directory Structure and Files
      run: |
        if (!(Test-Path -Path "./scripts/fetch-latest-release.ps1")) {
          Write-Error "Required PowerShell script does not exist."
          exit 1
        }
      shell: pwsh

    - name: Check for packages directory and set environment variable
      run: |
        if (Test-Path -Path "./packages/") {
          echo "PACKAGES_EXISTS=true" | Out-File -FilePath $env:GITHUB_ENV -Append
        } else {
          echo "PACKAGES_EXISTS=false" | Out-File -FilePath $env:GITHUB_ENV -Append
          New-Item -Path "./packages/" -ItemType Directory
        }
      shell: pwsh

    - name: Execute PowerShell Script
      run: .\scripts\fetch-latest-release.ps1
      shell: pwsh

    - name: Identify Parent Directory, Move .nupkg Files, and Copy to Packages
      id: identify_parent
      run: |
        # Dynamically find 'tools' directory and identify its parent directory
        $toolsParentPath = (Get-ChildItem -Recurse -Directory -Filter "tools").FullName | Select-Object -First 1 | Split-Path
    
        if ($null -ne $toolsParentPath) {
          $parentDirName = (Get-Item $toolsParentPath).Name
          Move-Item -Path "$toolsParentPath/tools/*.nupkg" -Destination "$toolsParentPath/"
          Copy-Item -Path $toolsParentPath -Destination "./packages/$parentDirName" -Recurse
          echo "parentDirName=$parentDirName" | Out-File -FilePath $env:GITHUB_ENV -Append
        } else {
          Write-Error "The tools directory does not exist. Aborting."
          exit 1
        }
      shell: pwsh


    - name: Conditionally Commit and Push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        if ($env:PACKAGES_EXISTS -eq "true") {
          # Add only the new parent directory under packages
          git add "./packages/${{ env.parentDirName }}/"
        } else {
          # Add the entire packages directory
          git add "./packages/"
        }

        # Commit and push
        git commit -m "Add new parent directory package"
        git push -f
      shell: pwsh
